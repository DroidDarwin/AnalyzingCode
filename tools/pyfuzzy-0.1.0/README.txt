-*- coding: utf-8 -*-


                             Python Fuzzy
                             release 0.1.0
                           October 18th, 2009


INTRODUCTION
------------

This package is intended to realize fuzzy systems, which operate fuzzy rules
on fuzzy sets. (For more information see the documentation at the web page
http://pyfuzzy.sourceforge.net)

REQUIREMENTS
------------

This release of the pyfuzzy requires Python 2.5 or later.


For generation documentation from the source distribution, you need the
Python internal pydoc or better epydoc (http://epydoc.sourceforge.net).

For reading FCL files you need the ANTLR3 python runtime.
(http://www.antlr.org/wiki/display/ANTLR3/Python+runtime)

For generating plots of your variables or functional dependencies
(also for some tests) you need gnuplot 4.2/4.3 and Gnuplot.py 1.8
(http://gnuplot-py.sourceforge.net)

For generation images from the structure of fuzzy system you need the dot
tool from the graphviz package. (http://www.graphviz.org)


INSTALLATION
------------

Obviously, in order to use pyfuzzy you must first install it.
This is quite easy:

    python setup.py install

Note that this installs to the "site" library directory of your local
Python installation: /usr/local/lib/python2.x/site-packages by default
on Unix, "C:\Program Files\Python" by default on Windows.  Since
pyfuzzy is "package-ized", the installation process will create a
subdirectory "fuzzy" under the site library directory.

The installation is by default quite verbose.  You can silence it with
the "-q" option:

    python setup.py -q install

but unfortunately the verbosity (of the underlying distutils installer)
is (currently) all or nothing.


USAGE
-----

As this is not a standalone program, there is no usage description.
For using the package in an own fuzzy system program just import the
needed python modules. (See the api documentation at the web page or
the local documentation generated by pydoc or epydoc.)

EXAMPLES
--------

Examples are not provided directly in this package, see at the project
website for them.

In the examples directory you can find several subdirectories:

inverted pendulum:
    This is a example of controller for an inverted
    pendulum. (Also called sometimes pole balancer.)

    In the GUI use the menu item Process/View to get the visualization.
    Currently it is controlled by an (imperfect) neural network, which was
    trained with data from a fuzzy controller (used in the Delphi fuzzy
    system which was the base of this python fuzzy project)

...

BUGS AND LIMITATIONS
--------------------

At using fuzzy sets of type Polygon and Singleton, operations merge and norm
calculate wrong result if there are vertical slopes in it.

Also because of using Polygon sets at intermediate representation you might
change the value of fuzzy.set.Function.Function._resolution according to
your needs, when using sets like Pi/S/ZFunction.

Another problem arises when using nonlinear operations for fuzzy norms with
merge- and norm-functions. Then you should set the segment_size according to
your precision needs. (Better precision means more line segments in resulting
Polygon set, but needs also more time to compute it.)

CONTRIBUTING
------------

Contact : René Liebscher <R.Liebscher@gmx.de>
or use the project page at http://sourceforge.net/projects/pyfuzzy

ACKNOWLEDGMENTS
---------------

Main contributors:
  * René Liebscher (2002-2009): current maintainer
        - initial version
        - example "inverted pendulum" (not included here, see webpage)
           (basically a heavily improved port of a previous work in Delphi)
        - major reworks (2008,2009)
        - example "container crane"  (not included here, see webpage)

Others:
  * Marc Vollmer (2002):
        - example "mixer" (not included here, see webpage)

  * Philippe Lafoucrière (2003):
        - added min/max/unit properties to variables
        - GUI fuzzui (not included here, not finished)
        - example "analyse" (not included here, see webpage)


$Id: README.txt,v 1.6 2009/10/18 19:52:23 rliebscher Exp $
